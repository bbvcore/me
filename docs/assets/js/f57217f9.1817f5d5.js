"use strict";(self.webpackChunkmydocs=self.webpackChunkmydocs||[]).push([[4784],{2027:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"Programacion/Shell-scripts/comparaciones-for-anidado","title":"Comparaciones FOR anidado","description":"Para ello son necesarias fuentes de datos, la primera ser\xe1n las IPs escaneadas con nmap en la red local y la segunda ser\xe1 un fichero con una direcci\xf3n de IPs permitidas.","source":"@site/docs/Programacion/Shell-scripts/comparaciones-for-anidado.md","sourceDirName":"Programacion/Shell-scripts","slug":"/Programacion/Shell-scripts/comparaciones-for-anidado","permalink":"/me/docs/docs/Programacion/Shell-scripts/comparaciones-for-anidado","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Programacion/Shell-scripts/comparaciones-for-anidado.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Comparaciones FOR anidado"},"sidebar":"tutorialSidebar","previous":{"title":"Comparaciones While optimizado","permalink":"/me/docs/docs/Programacion/Shell-scripts/comparaciones-arrays-asociativos"},"next":{"title":"Install python","permalink":"/me/docs/docs/Programacion/Shell-scripts/install-python-debian"}}');var s=a(4848),o=a(8453);const i={sidebar_position:1,title:"Comparaciones FOR anidado"},c="Comparaciones IPs con FOR",d={},t=[{value:"Obtener IPs de la red local",id:"obtener-ips-de-la-red-local",level:2},{value:"Obtener las IPs desde un fichero de texto",id:"obtener-las-ips-desde-un-fichero-de-texto",level:2},{value:"Comparaci\xf3n de los arrays",id:"comparaci\xf3n-de-los-arrays",level:2}];function l(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"comparaciones-ips-con-for",children:"Comparaciones IPs con FOR"})}),"\n",(0,s.jsx)(n.p,{children:"Para ello son necesarias fuentes de datos, la primera ser\xe1n las IPs escaneadas con nmap en la red local y la segunda ser\xe1 un fichero con una direcci\xf3n de IPs permitidas."}),"\n",(0,s.jsx)(n.h2,{id:"obtener-ips-de-la-red-local",children:"Obtener IPs de la red local"}),"\n",(0,s.jsx)(n.p,{children:"Almacenamiento de los datos en un array tras escanear la red con nmap."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'readarray -t nmap_ips < <(\n    nmap -sn -n "$1" |\n    awk \'/report/ {gsub(/[()]/, ""); print $5}\' \n)\n'})}),"\n",(0,s.jsx)(n.admonition,{title:"Explicaci\xf3n generaci\xf3n Array",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"readarray -t nmap-ips"}),": ",(0,s.jsx)(n.em,{children:"creaci\xf3n de un array con el nombre nmap-ips"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"nmap"}),": Escaneo de la red sin resolver ",(0,s.jsx)(n.strong,{children:"DNS"})," acorde a la direcci\xf3n pasada como argumento ",(0,s.jsx)(n.strong,{children:"$1"})," durante la ejecuci\xf3n del script desde la terminal."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"awk '/report/'"}),": b\xfasqueda en los resultados de nmap de las l\xedneas con la palabra ",(0,s.jsx)(n.strong,{children:"report"}),"."]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"obtener-las-ips-desde-un-fichero-de-texto",children:"Obtener las IPs desde un fichero de texto"}),"\n",(0,s.jsxs)(n.p,{children:["Leer las ",(0,s.jsx)(n.strong,{children:"IPs"})," desde un ",(0,s.jsx)(n.em,{children:"fichero de texto"})," y almacenarlo en un array."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"readarray -t file_ips < ips.txt\n"})}),"\n",(0,s.jsx)(n.h2,{id:"comparaci\xf3n-de-los-arrays",children:"Comparaci\xf3n de los arrays"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'for ip_nmap in "${nmap_ips[@]}"; do\n    counter=0\n    for ip_list in "${file_ips[@]}"; do\n        if [[ "$ip_nmap" == "$ip_list" ]]; then\n            echo "IP coincidente: $ip_nmap"\n            counter=1\n            break\n        fi\n    done\n    [[ $counter -eq 0 ]] && echo "IP no encontrada"\ndone\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var r=a(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);