"use strict";(self.webpackChunkmydocs=self.webpackChunkmydocs||[]).push([[9306],{5632:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"IT/Servicios/Contenerizacion/Podman/podman","title":"Podman","description":"Se trata de un gestor de contenedores open source similar a Docker, de hecho aprovecha los mismos comandos y la misma estructura para generar imagenes, volumenes y contenedores","source":"@site/docs/IT/Servicios/Contenerizacion/Podman/podman.md","sourceDirName":"IT/Servicios/Contenerizacion/Podman","slug":"/IT/Servicios/Contenerizacion/Podman/","permalink":"/me/docs/docs/IT/Servicios/Contenerizacion/Podman/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IT/Servicios/Contenerizacion/Podman/podman.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Podman"},"sidebar":"tutorialSidebar","previous":{"title":"ELK","permalink":"/me/docs/docs/IT/Servicios/Contenerizacion/Docker/elk"},"next":{"title":"Menu","permalink":"/me/docs/docs/OT/intro"}}');var r=a(4848),d=a(8453);const s={sidebar_position:1,title:"Podman"},i="Podman",c={},l=[{value:"Casos de uso",id:"casos-de-uso",level:2},{value:"Desde la terminal de comandos",id:"desde-la-terminal-de-comandos",level:2},{value:"Creaci\xf3n de un contenedor desde la terminal",id:"creaci\xf3n-de-un-contenedor-desde-la-terminal",level:4},{value:"Comprobaci\xf3n de los contenedores en ejecuci\xf3n",id:"comprobaci\xf3n-de-los-contenedores-en-ejecuci\xf3n",level:3},{value:"Otros comandos interesantes",id:"otros-comandos-interesantes",level:4},{value:"A partir de una imagen personalizada",id:"a-partir-de-una-imagen-personalizada",level:2},{value:"Crear imagen con Dockerfile",id:"crear-imagen-con-dockerfile",level:3},{value:"Comprobaci\xf3n de la imagen creada",id:"comprobaci\xf3n-de-la-imagen-creada",level:3},{value:"Desplegando desde la terminal la imagen creada",id:"desplegando-desde-la-terminal-la-imagen-creada",level:4},{value:"Desplegando con podman-compose",id:"desplegando-con-podman-compose",level:4},{value:"Extras para el fichero YAML",id:"extras-para-el-fichero-yaml",level:2}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"podman",children:"Podman"})}),"\n",(0,r.jsx)(n.p,{children:"Se trata de un gestor de contenedores open source similar a Docker, de hecho aprovecha los mismos comandos y la misma estructura para generar imagenes, volumenes y contenedores"}),"\n",(0,r.jsx)(n.h2,{id:"casos-de-uso",children:"Casos de uso"}),"\n",(0,r.jsx)(n.h2,{id:"desde-la-terminal-de-comandos",children:"Desde la terminal de comandos"}),"\n",(0,r.jsx)(n.h4,{id:"creaci\xf3n-de-un-contenedor-desde-la-terminal",children:"Creaci\xf3n de un contenedor desde la terminal"}),"\n",(0,r.jsx)(n.p,{children:"Se procede a crear un contenedor para node-red, mapeando el puerto 1880, descargando la imagen de docker.io y generando persistencia en el directorio /var/tmp/docker-containers."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$sudo podman run -d   -p 1880:1880   -v /var/tmp/docker-containers/node-red/data:/data   --name nodered   docker.io/nodered/node-red\nTrying to pull docker.io/nodered/node-red:la\n"})}),"\n",(0,r.jsx)(n.h3,{id:"comprobaci\xf3n-de-los-contenedores-en-ejecuci\xf3n",children:"Comprobaci\xf3n de los contenedores en ejecuci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2514\u2500\u2500\u257c $podman ps\nCONTAINER ID  IMAGE                              COMMAND     CREATED        STATUS            PORTS                   NAMES\n6768253abc0a  docker.io/nodered/node-red:latest              2 minutes ago  Up 2 minutes ago  0.0.0.0:1880->1880/tcp  nodered\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"M\xe1s detalles",type:"tip",children:[(0,r.jsx)(n.p,{children:"Para obtener m\xe1s detalles de los contenedores se puede usar el siguiente comando."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo podman container list --all\n"})})]}),"\n",(0,r.jsx)(n.h4,{id:"otros-comandos-interesantes",children:"Otros comandos interesantes"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Comprobar logs"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman logs nodered\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Eliminar"}),"\nEl comando por defecto para eliminar es ",(0,r.jsx)(n.strong,{children:"rm"}),", para im\xe1genes tambi\xe9n se puede usar ",(0,r.jsx)(n.strong,{children:"rmi"})," y para eliminar todos los contenedores y no uno a uno se puede usar ",(0,r.jsx)(n.strong,{children:"prune"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman rm name\npodman rm id\npodman container prune \n"})}),"\n",(0,r.jsx)(n.h2,{id:"a-partir-de-una-imagen-personalizada",children:"A partir de una imagen personalizada"}),"\n",(0,r.jsx)(n.h3,{id:"crear-imagen-con-dockerfile",children:"Crear imagen con Dockerfile"}),"\n",(0,r.jsxs)(n.p,{children:["Para crear una imagen propia se hace uso del fichero ",(0,r.jsx)(n.strong,{children:"Dockerfile"}),", el cual especificar\xe1 las caracter\xedsticas de la nueva imagen."]}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(n.p,{children:"Contenido del Dockerfile"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Construir imagen usando de base la oficial\nFROM nodered/node-red:latest\n\n# Instalar nodos extras\n#RUN npm install \\\n#    node-red-contrib-mqtt \\\n#    node-red-node-mongodb \\\n#    node-red-contrib-mysql \\\n#    node-red-contrib-influxdb\n\n# Exposici\xf3n del puerto 1880 \nEXPOSE 1880\n\n# Comando inicial al lanzar el contenedor CMD ["exec", "param1", "param2", "param n"]\n# De base se lanza node\n# De par\xe1metro se lanza red.js que se encarga de cargar los m\xf3dulos\n# procesar settings.js, arrancar componentes, cargar web server y escuchar el 1880\nCMD ["node", "/usr/src/node-red/red.js"]\n'})})]}),"\n",(0,r.jsxs)(n.admonition,{title:"Caracter\xedsticas del Dockefile",type:"note",children:[(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nombre del fichero"}),": el fichero siempre se ha de llamar ",(0,r.jsx)(n.strong,{children:"Dockerfile"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Creaci\xf3n de la imagen"}),":"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman build -t tag-imagen .\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"comprobaci\xf3n-de-la-imagen-creada",children:"Comprobaci\xf3n de la imagen creada"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2514\u2500\u2500\u257c $sudo podman image ls\nREPOSITORY                  TAG         IMAGE ID      CREATED        SIZE\nlocalhost/nodered           latest      2f98b8b7765d  4 minutes ago  620 MB\n"})}),"\n",(0,r.jsx)(n.h4,{id:"desplegando-desde-la-terminal-la-imagen-creada",children:"Desplegando desde la terminal la imagen creada"}),"\n",(0,r.jsx)(n.p,{children:"Una vez se ha creado la imagen se procede a desplegar el contenedor."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo podman run -d -p 1880:1880 -v /var/tmp/docker-containers/node-red/data:/data --name nodered localhost/nodered:latest\n"})}),"\n",(0,r.jsx)(n.h4,{id:"desplegando-con-podman-compose",children:"Desplegando con podman-compose"}),"\n",(0,r.jsxs)(n.p,{children:["Se crea un fichero ",(0,r.jsx)(n.strong,{children:"Yaml"})," con las caracter\xedsticas necesarias para el despligue del contenedor de la imagen creada."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"version: '3.8'\n\nservices:\n  nodered:\n    image: localhost/nodered:latest\n    container_name: nodered\n    ports:\n      - \"1880:1880\"\n    volumes:\n      - /var/tmp/docker-containers/node-red/data:/data\n    restart: always\n    networks:\n      - basix-network\n\nnetworks:\n  basix-network:\n    driver: bridge\n"})}),"\n",(0,r.jsx)(n.p,{children:"En docker se usaba el fichero docker-compose, en podman el fichero se renombra a podman-compose pero se despliega de la misma forma que en docker."}),"\n",(0,r.jsx)("b",{children:"Instalaci\xf3n de podman-compose"}),"\n",(0,r.jsx)(n.p,{children:"Se puede instalar de varias formas, a trav\xe9s de APT o de PIP."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo pip3 install podman-compose\nsudo apt install podman-compose\n"})}),"\n",(0,r.jsx)(n.p,{children:"Se comprueba la versi\xf3n descargada y as\xed tambi\xe9n se certifica que la instalaci\xf3n se realiz\xf3 correctamente."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman-compose --version\n"})}),"\n",(0,r.jsx)("b",{children:"Despligue y cancelaci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["Con ",(0,r.jsx)(n.strong,{children:"up"})," se despliega el contenedor con la imagen creada y con ",(0,r.jsx)(n.strong,{children:"down"})," se finaliza el mismo."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo podman-compose up -d\nsudo podman-compose down\n"})}),"\n",(0,r.jsx)("b",{children:"Ejemplo del despliegue"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2514\u2500\u2500\u257c $sudo podman-compose  up -d\npodman-compose version: 1.0.6\n['podman', '--version', '']\nusing podman version: 4.3.1\n** excluding:  set()\n['podman', 'ps', '--filter', 'label=io.podman.compose.project=node-red', '-a', '--format', '{{ index .Labels \"io.podman.compose.config-hash\"}}']\n\n...\n\n7e61a7d6ef7c0ec5b7b5522195724c116c5881fe537adb20eafb84fe09e62606\nexit code: 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"extras-para-el-fichero-yaml",children:"Extras para el fichero YAML"}),"\n",(0,r.jsx)(n.p,{children:"A\xf1adir contenedores con las im\xe1genes de repositorio al fichero YAML para desplegar tambi\xe9n Grafana e InfluxDB."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'  influxdb:\n    image: influxdb:latest\n    container_name: influxdb\n    ports:\n      - "8086:8086"\n    volumes:\n      - /var/tmp/influxdb:/var/lib/influxdb\n    restart: always\n    networks:\n      - basix-network\n\n  grafana:\n    image: grafana/grafana:latest\n    container_name: grafana\n    ports:\n      - "3000:3000"\n    restart: always\n    networks:\n      - basix-network\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin  # Cambia la contrase\xf1a por defecto si es necesario\n\nnetworks:\n  basix-network:\n    driver: bridge\n\n'})})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var o=a(6540);const r={},d=o.createContext(r);function s(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);