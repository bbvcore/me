"use strict";(self.webpackChunkmydocs=self.webpackChunkmydocs||[]).push([[8799],{5001:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"OT/Pr\xe1cticas/replicacion-env-siemens","title":"Replica del entorno Siemens IoT2040","description":"Para poder trabajar dentro de GNU/Linux sin tener que estar instalado al Yocto  se va a crear un entorno virtual para disponer de la misma versi\xf3n de Python y de las mismas liber\xedas.","source":"@site/docs/OT/Pr\xe1cticas/replicacion-env-siemens.md","sourceDirName":"OT/Pr\xe1cticas","slug":"/OT/Pr\xe1cticas/replicacion-env-siemens","permalink":"/me/docs/docs/OT/Pr\xe1cticas/replicacion-env-siemens","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/OT/Pr\xe1cticas/replicacion-env-siemens.md","tags":[],"version":"current","frontMatter":{"title":"Replica del entorno Siemens IoT2040"},"sidebar":"tutorialSidebar","previous":{"title":"Cross Compilation","permalink":"/me/docs/docs/OT/Pr\xe1cticas/cross-compilation"},"next":{"title":"PLC Siemnes","permalink":"/me/docs/docs/OT/Teor\xeda/PLC-siemens"}}');var a=i(4848),s=i(8453);const l={title:"Replica del entorno Siemens IoT2040"},o="Replica del entorno virtual Siemens IoT2040",t={},c=[{value:"Preparar el entorno virtual",id:"preparar-el-entorno-virtual",level:2},{value:"Opci\xf3n repositorios de la distribuci\xf3n",id:"opci\xf3n-repositorios-de-la-distribuci\xf3n",level:3},{value:"Opci\xf3n instalaci\xf3n desde el c\xf3digo fuente",id:"opci\xf3n-instalaci\xf3n-desde-el-c\xf3digo-fuente",level:3},{value:"Descarga del c\xf3digo fuente",id:"descarga-del-c\xf3digo-fuente",level:4},{value:"Compilaci\xf3n",id:"compilaci\xf3n",level:4},{value:"Creaci\xf3n del entorno virtual",id:"creaci\xf3n-del-entorno-virtual",level:2},{value:"Ejemplo para S7 versi\xf3n 1.3",id:"ejemplo-para-s7-versi\xf3n-13",level:3},{value:"Comprobaciones de versiones",id:"comprobaciones-de-versiones",level:3},{value:"Instalaci\xf3n librer\xedas",id:"instalaci\xf3n-librer\xedas",level:3},{value:"Versi\xf3n espec\xedfica",id:"versi\xf3n-espec\xedfica",level:4},{value:"Librer\xeda libsnap7.so",id:"librer\xeda-libsnap7so",level:2},{value:"Configuraci\xf3n de variables",id:"configuraci\xf3n-de-variables",level:3},{value:"Limpieza y compilaci\xf3n",id:"limpieza-y-compilaci\xf3n",level:3},{value:"Preparaci\xf3n de paquete para transferir",id:"preparaci\xf3n-de-paquete-para-transferir",level:3},{value:"Caso de uso de librer\xeda Siemens 7 (v-1.3)",id:"caso-de-uso-de-librer\xeda-siemens-7-v-13",level:2},{value:"C\xf3digo servidor",id:"c\xf3digo-servidor",level:3},{value:"C\xf3digo cliente",id:"c\xf3digo-cliente",level:3},{value:"Ejemplo para OPCUA 0.98.12",id:"ejemplo-para-opcua-09812",level:3},{value:"C\xf3digo cliente",id:"c\xf3digo-cliente-1",level:3},{value:"C\xf3digo server",id:"c\xf3digo-server",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"replica-del-entorno-virtual-siemens-iot2040",children:"Replica del entorno virtual Siemens IoT2040"})}),"\n",(0,a.jsxs)(n.p,{children:["Para poder trabajar dentro de ",(0,a.jsx)(n.strong,{children:"GNU/Linux"})," sin tener que estar instalado al ",(0,a.jsx)(n.strong,{children:"Yocto"}),"  se va a crear un entorno virtual para disponer de la misma versi\xf3n de Python y de las mismas liber\xedas."]}),"\n",(0,a.jsxs)(n.admonition,{title:"Caracter\xedsticas del entorno",type:"tip",children:[(0,a.jsx)(n.p,{children:"Entre las caracter\xedsiticas del entorno a replicar figuran las siguientes:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Entorno Python 3.8."}),"\n",(0,a.jsx)(n.li,{children:"Librer\xeda Opcua  0.98.12"}),"\n",(0,a.jsx)(n.li,{children:"Libreria Python-Snap7 1.0"}),"\n"]})]}),"\n",(0,a.jsx)(n.h2,{id:"preparar-el-entorno-virtual",children:"Preparar el entorno virtual"}),"\n",(0,a.jsx)(n.h3,{id:"opci\xf3n-repositorios-de-la-distribuci\xf3n",children:"Opci\xf3n repositorios de la distribuci\xf3n"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt update\nsudo apt install python3.8 python3.8-dev python3.8-venv\npython3.8 --version\n"})}),"\n",(0,a.jsx)(n.h3,{id:"opci\xf3n-instalaci\xf3n-desde-el-c\xf3digo-fuente",children:"Opci\xf3n instalaci\xf3n desde el c\xf3digo fuente"}),"\n",(0,a.jsx)(n.h4,{id:"descarga-del-c\xf3digo-fuente",children:"Descarga del c\xf3digo fuente"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz\n"})}),"\n",(0,a.jsx)(n.h4,{id:"compilaci\xf3n",children:"Compilaci\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"Previo a la compilaci\xf3n"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install  libffi-dev build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev  liblzma-dev\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"./configure --enable-optimizations # Preparaci\xf3n de las dependencias con optimizaci\xf3n para los makefiles\nmake -j $(nproc) # Make inicia la compilaci\xf3n de los makefiles, jobs n\xfamero de procesos paralelos a usar en la compilaci\xf3n y nproc devuelve el valor de n\xfacleos disponibles\nsudo make altinstall # Install instala pudiendo sobrescribir, altinstall sin sobrescribir ficheros cr\xedticos.\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"creaci\xf3n-del-entorno-virtual",children:"Creaci\xf3n del entorno virtual"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python3.8 -m venv ./iot2040-dev\nsource sourc/iot2040-dev/bin/activate\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-para-s7-versi\xf3n-13",children:"Ejemplo para S7 versi\xf3n 1.3"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(n.p,{children:"Versi\xf3n Snap7 1.3"})}),(0,a.jsx)(n.h3,{id:"comprobaciones-de-versiones",children:"Comprobaciones de versiones"}),(0,a.jsx)(n.p,{children:"Dentro de la terminal ejecutar"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python3.8 --version # comprobar que es la versi\xf3n correcta de 3.8.x\n"})}),(0,a.jsx)(n.p,{children:"Una vez activado el entorno virtual ejecutar"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python --version # debe de devolver la versi\xf3n 3.8.x\n"})}),(0,a.jsx)(n.h3,{id:"instalaci\xf3n-librer\xedas",children:"Instalaci\xf3n librer\xedas"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python -m ensurepip --upgrade # actualizar pip\npip install --upgrade pip setuptools wheel # herramientas para las librer\xedas\npip install python-snap7 # instalaci\xf3n de la librer\xeda\n"})}),(0,a.jsx)(n.p,{children:"Y se comprueba que este todo correctamente instalado"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install python-snap7\nRequirement already satisfied: python-snap7 in /*****/*****/*****/lib/python3.8/site-packages (1.3)\n"})}),(0,a.jsx)(n.h4,{id:"versi\xf3n-espec\xedfica",children:"Versi\xf3n espec\xedfica"}),(0,a.jsx)(n.p,{children:"Si se quiere una versi\xf3n espec\xedfica se puede usar el siguiente m\xe9todo"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install python-snap7==1.3\n"})}),(0,a.jsx)(n.h2,{id:"librer\xeda-libsnap7so",children:"Librer\xeda libsnap7.so"}),(0,a.jsx)(n.h3,{id:"configuraci\xf3n-de-variables",children:"Configuraci\xf3n de variables"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'export CFLAGS="-m32 -march=i586 -mtune=atom"\nexport CXXFLAGS="-m32 -march=i586 -mtune=atom"\nexport LDFLAGS="-m32"\n'})}),(0,a.jsx)(n.h3,{id:"limpieza-y-compilaci\xf3n",children:"Limpieza y compilaci\xf3n"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"make -f i386_linux.mk clean\nmake -f i386_linux.mk\n"})}),(0,a.jsx)(n.h3,{id:"preparaci\xf3n-de-paquete-para-transferir",children:"Preparaci\xf3n de paquete para transferir"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p snap7-iot2000/lib\ncp ../bin/i386_linux/libsnap7.so snap7-iot2000/lib/\ntar czvf snap7-iot2000.tar.gz snap7-iot2000\n"})}),(0,a.jsx)(n.h2,{id:"caso-de-uso-de-librer\xeda-siemens-7-v-13",children:"Caso de uso de librer\xeda Siemens 7 (v-1.3)"}),(0,a.jsx)(n.p,{children:"Debido a la librer\xeda usada de S7 se han de tener en cuenta ciertas peculiaridades:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Por temas de permisos en el OS se ha usado 1102 en vez de 102 como alternativa en desarrollo(otra opci\xf3n es usar sudo)."}),"\n",(0,a.jsx)(n.li,{children:"Usar solo el \xe1rea DB que es la m\xe1s estable en esta versi\xf3n."}),"\n"]}),(0,a.jsx)(n.admonition,{title:"Solo en entorno virtual",type:"warning",children:(0,a.jsx)(n.p,{children:"Este c\xf3digo funciona en PC con entorno virtual, pero no funciona en el Yocto del Siemens IoT por problemas con las librer\xedas de C++, en el Yocto hacerlo con Python puro"})}),(0,a.jsx)(n.h3,{id:"c\xf3digo-servidor",children:"C\xf3digo servidor"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import snap7\nimport ctypes\nimport time\nimport struct\nimport sys\n\ndef run_server():\n    print("Iniciando servidor Snap7 1.3 en puerto 1102...")\n    \n    # Crear instancia del servidor\n    server = snap7.server.Server()\n    \n    # Tama\xf1o del \xe1rea de datos\n    db_size = 128\n    \n    # Configurar \xe1rea DB (\xfanica \xe1rea que funciona consistentemente en 1.3)\n    db_data = (ctypes.c_uint8 * db_size)()\n    \n    try:\n        # Registrar \xe1rea DB - m\xe9todo compatible con 1.3\n        server.register_area(snap7.server.srvAreaDB, 1, db_data)\n        \n        # Valores iniciales\n        print("Configurando valores iniciales en DB1...")\n        struct.pack_into(\'>h\', db_data, 0, 1234)    # Entero en DB1.DBW0\n        struct.pack_into(\'>f\', db_data, 4, 3.14159) # Real en DB1.DBD4\n        db_data[8] = db_data[8] | 0x01              # Bool en DB1.DBX8.0\n        \n        # Usar puerto 1102 (no privilegiado) en lugar de 102\n        port = 1102\n        print(f"Iniciando servidor en puerto {port}...")\n        server.start(tcpport=port)\n        \n        print(f"Servidor Snap7 funcionando en localhost:{port}")\n        print("Presiona Ctrl+C para detener...")\n        \n        while True:\n            time.sleep(1)\n            \n    except Exception as e:\n        print(f"Error: {str(e)}", file=sys.stderr)\n    finally:\n        server.stop()\n        print("Servidor detenido")\n\nif __name__ == \'__main__\':\n    run_server()\n'})}),(0,a.jsx)(n.h3,{id:"c\xf3digo-cliente",children:"C\xf3digo cliente"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import snap7\nfrom snap7 import util\n\ndef run_client():\n    print("Iniciando cliente Snap7...")\n    \n    client = snap7.client.Client()\n    server_ip = \'127.0.0.1\'\n    port = 1102  # Mismo puerto que el servidor\n    \n    try:\n        print(f"Conectando a {server_ip}:{port}...")\n        client.connect(server_ip, 0, 1, port)\n        print("Conexi\xf3n exitosa!")\n        \n        print("\\nLeyendo DB1...")\n        db1 = client.db_get(1)\n        \n        # Mostrar valores\n        print(f"DB1.DBW0 (entero): {util.get_int(db1, 0)}")\n        print(f"DB1.DBD4 (real): {util.get_real(db1, 4):.5f}")\n        print(f"DB1.DBX8.0 (bool): {util.get_bool(db1, 8, 0)}")\n        \n        # Escribir y verificar nuevo valor\n        print("\\nEscribiendo 5678 en DB1.DBW10...")\n        util.set_int(db1, 10, 5678)\n        client.db_write(1, 0, db1)\n        \n        print("Valor actualizado:", util.get_int(client.db_get(1), 10))\n        \n    except Exception as e:\n        print(f"Error: {e}")\n    finally:\n        client.disconnect()\n        print("\\nDesconectado")\n\nif __name__ == \'__main__\':\n    run_client()\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-para-opcua-09812",children:"Ejemplo para OPCUA 0.98.12"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(n.p,{children:"Versi\xf3n OPCUA 0.98.12"})}),(0,a.jsx)(n.h3,{id:"c\xf3digo-cliente-1",children:"C\xf3digo cliente"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python"})}),(0,a.jsx)(n.h3,{id:"c\xf3digo-server",children:"C\xf3digo server"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python"})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);